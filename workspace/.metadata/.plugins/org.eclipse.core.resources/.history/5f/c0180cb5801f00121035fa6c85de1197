package org.apache.mahout.clustering.elkan;

import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.io.IntWritable;
import org.apache.mahout.common.Pair;
import org.apache.mahout.common.iterator.sequencefile.PathFilters;
import org.apache.mahout.common.iterator.sequencefile.PathType;
import org.apache.mahout.common.iterator.sequencefile.SequenceFileDirIterator;
import org.apache.mahout.math.MatrixSlice;
import org.apache.mahout.math.Vector;
import org.apache.mahout.math.VectorWritable;

import com.google.common.base.Function;
import com.google.common.collect.Iterators;

public class CentroidDistanceMatrix {
	
	private Path path;
	
	public Vector getRow(int index, Configuration conf)
	{
		Iterators.transform(
		          new SequenceFileDirIterator<IntWritable,VectorWritable>(new Path(path, ""+index),
		                                                                  PathType.GLOB,
		                                                                  PathFilters.logsCRCFilter(),
		                                                                  null,
		                                                                  true,
		                                                                  conf),
		          new Function<Pair<IntWritable,VectorWritable>,MatrixSlice>() {
		            @Override
		            public MatrixSlice apply(Pair<IntWritable, VectorWritable> from) {
		              return new MatrixSlice(from.getSecond().get(), from.getFirst().get());
		            }
		          });	
		return null;
	}

}
